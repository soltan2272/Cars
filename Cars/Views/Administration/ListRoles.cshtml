@*@model IEnumerable<IdentityRole>*@
@model PaginatedList<IdentityRole>
@inject IAuthorizationService AuthorizationService
@{
    ViewBag.Title = "All Roles";
}

<h3 class="ml-3">All Roles</h3>

@if (Model.Any())
{
    @if (AuthorizationService.AuthorizeAsync(User, Permissions.Roles.Create).Result.Succeeded)
    {
        <a class="btn btn-primary mb-3 ml-3" style="width:auto" asp-action="CreateRole"
           asp-controller="administration">Add new role</a>
    }
    <div class="table-responsive">
        <table class="table table-bordered table-striped mb-0">
            <thead>
                <tr>
                    <th>
                        Role
                    </th>
                    @if (AuthorizationService.AuthorizeAsync(User, Permissions.Roles.ManagePermissions).Result.Succeeded)
                    {
                        <th>
                            Manage  Permissions
                        </th>
                    }
                    @if (AuthorizationService.AuthorizeAsync(User, Permissions.Roles.Edit).Result.Succeeded)
                    {
                        <th>
                            Edit
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var role in Model)
                {
                    <tr>
                        <td>
                            @role.Name
                        </td>
                        @if (AuthorizationService.AuthorizeAsync(User, Permissions.Roles.ManagePermissions).Result.Succeeded)
                        {
                            <td>
                                <a class="btn btn-dark" asp-action="ManagePermissions" asp-route-roleId="@role.Id">Manage Permissions</a>
                            </td>
                        }
                        @if (AuthorizationService.AuthorizeAsync(User, Permissions.Roles.Edit).Result.Succeeded)
                        {
                            <td>
                                <a asp-controller="Administration" asp-action="EditRole"
                                   asp-route-id="@role.Id" class="btn btn-primary">Edit</a>
                            </td>
                        }
                    </tr>



                }
            </tbody>
        </table>
    </div>

    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";


    <div class="col-sm-8" style="overflow-x:auto">
        <a asp-action="ListRoles"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           class="btn btn-primary @prevDisabled">
            Previous
        </a>
        @{
            int pagenumbers = (ViewBag.currentpage + 4 <= ViewBag.pages) ? ViewBag.currentpage + 4 : ViewBag.currentpage + 3;
            if (pagenumbers > ViewBag.pages)
            {
                pagenumbers = ViewBag.currentpage + 2;
            }

            if (pagenumbers > ViewBag.pages)
            {
                pagenumbers = ViewBag.currentpage + 1;
            }
            if (pagenumbers > ViewBag.pages)
            {
                pagenumbers = ViewBag.currentpage;
            }

            int start = (ViewBag.currentpage - 2 > 0) ? ViewBag.currentpage - 2 : ViewBag.currentpage;
        }
        @for (int i = start; i <= pagenumbers; i++)
        {
            if (i == ViewBag.currentpage)
            {
                <a asp-action="ListRoles"
                   asp-route-pageNumber="@i"
                   class="btn btn-success">
                    @i
                </a>
            }
            else
            {
                <a asp-action="ListRoles"
                   asp-route-pageNumber="@i"
                   class="btn btn-primary">
                    @i
                </a>
            }
        }
        <a asp-action="ListRoles"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           class="btn btn-primary @nextDisabled">
            Next
        </a>
    </div>
}
else
{
    <div class="card">
        <div class="card-header">
            No roles created yet
        </div>
        <div class="card-body">
            <h5 class="card-title">
                Use the button below to create a role
            </h5>
            @if (AuthorizationService.AuthorizeAsync(User, Permissions.Roles.Create).Result.Succeeded)
            {
                <a class="btn btn-primary" style="width:auto"
                   asp-controller="administration" asp-action="CreateRole">
                    Create Role
                </a>
            }
        </div>
    </div>
}

@section Scripts {
    <script>
        ChangeColorSidebarItem("", "aAdministration");
    </script>

}
